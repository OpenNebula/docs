# 
msgid ""
msgstr ""
"Project-Id-Version: OpenNebula 4.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-30 12:52+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/advanced_administration/scalability/suns_advance.rst:5
msgid "Configuring Sunstone for Large Deployments"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:7
msgid ""
"Low to medium enterprise clouds will typically deploy Sunstone in a single "
"machine a long with the OpenNebula daemons. However this simple deployment "
"can be improved by:"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:9
msgid ""
"Isolating the access from Web clients to the Sunstone server. This can be "
"achieved by deploying the Sunstone server in a separated machine."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:10
msgid ""
"Improve the scalability of the server for large user pools. Usually "
"deploying sunstone in a separate application container in one or more hosts."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:12
msgid ""
"Check also the :ref:`api scalability guide <one_scalability_api_tuning>` as "
"these of the tips also have an impact on Sunstone performance."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:15
msgid "Deploying Sunstone in a Different Machine"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:17
msgid ""
"By default the Sunstone server is configured to run in the frontend, but you"
" are able to install the Sunstone server in a machine different from the "
"frontend."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:19
msgid ""
"You will need to install only the sunstone server packages in the machine "
"that will be running the server. If you are installing from source use the "
"-s option for the ``install.sh`` script."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:21
msgid ""
"Make sure ``:one_xmlprc:`` variable in ``sunstone-server.conf`` points to "
"the right place where OpenNebula frontend is running, You can also leave it "
"undefined and export ``ONE_XMLRPC`` environment variable."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:23
msgid ""
"Provide the serveradmin credentials in the following file "
"``/var/lib/one/.one/sunstone_auth``. If you changed the serveradmin password"
" please check the :ref:`Cloud Servers Authentication guide <cloud_auth>`."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:30
msgid ""
"Using this setup the VirtualMachine logs will not be available. If you need "
"to retrieve this information you must deploy the server in the frontend"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:33
msgid "Running Sunstone Inside Another Webserver"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:35
msgid ""
"Self contained deployment of Sunstone (using ``sunstone-server`` script) is "
"ok for small to medium installations. This is no longer true when the "
"service has lots of concurrent users and the number of objects in the system"
" is high (for example, more than 2000 simultaneous virtual machines)."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:37
msgid ""
"Sunstone server was modified to be able to run as a ``rack`` server. This "
"makes it suitable to run in any web server that supports this protocol. In "
"ruby world this is the standard supported by most web servers. We now can "
"select web servers that support spawning multiple processes like ``unicorn``"
" or embedding the service inside ``apache`` or ``nginx`` web servers using "
"the Passenger module. Another benefit will be the ability to run Sunstone in"
" several servers and balance the load between them."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:40
msgid "Configuring memcached"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:42
msgid ""
"When using one on these web servers the use of a ``memcached`` server is "
"necessary. Sunstone needs to store user sessions so it does not ask for "
"user/password for every action. By default Sunstone is configured to use "
"memory sessions, that is, the sessions are stored in the process memory. "
"Thin and webrick web servers do not spawn new processes but new threads an "
"all of them have access to that session pool. When using more than one "
"process to server Sunstone there must be a service that stores this "
"information and can be accessed by all the processes. In this case we will "
"need to install ``memcached``. It comes with most distributions and its "
"default configuration should be ok. We will also need to install ruby "
"libraries to be able to access it. The rubygem library needed is ``memcache-"
"client``. If there is no package for your distribution with this ruby "
"library you can install it using rubygems:"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:48
msgid ""
"Then you will have to change in sunstone configuration (``/etc/one/sunstone-"
"server.conf``) the value of ``:sessions`` to ``memcache``."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:50
msgid ""
"If you want to use novcn you need to have it running. You can start this "
"service with the command:"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:56
msgid ""
"Another thing you have to take into account is the user on which the server "
"will run. The installation sets the permissions for ``oneadmin`` user and "
"group and files like the Sunstone configuration and credentials can not be "
"read by other users. Apache usually runs as ``www-data`` user and group so "
"to let the server run as this user the group of these files must be changed,"
" for example:"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:68
msgid ""
"We advise to use Passenger in your installation but we will show you how to "
"run Sunstone inside unicorn web server as an example."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:70
msgid ""
"For more information on web servers that support rack and more information "
"about it you can check the `rack documentation "
"<http://rack.rubyforge.org/doc/>`__ page. You can alternatively check a "
"`list of ruby web servers <https://www.ruby-"
"toolbox.com/categories/web_servers>`__."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:73
msgid "Running Sunstone with Unicorn"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:75
msgid ""
"To get more information about this web server you can go to its `web page "
"<http://unicorn.bogomips.org/>`__. It is a multi process web server that "
"spawns new processes to deal with requests."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:77
msgid ""
"The installation is done using rubygems (or with your package manager if it "
"is available):"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:83
msgid ""
"In the directory where Sunstone files reside (``/usr/lib/one/sunstone`` or "
"``/usr/share/opennebula/sunstone``) there is a file called ``config.ru``. "
"This file is specific for ``rack`` applications and tells how to fun the "
"application. To start a new server using ``unicorn`` you can run this "
"command from that directory:"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:89
msgid ""
"Default unicorn configuration should be ok for most installations but a "
"configuration file can be created to tune it. For example, to tell unicorn "
"to spawn 4 processes and write ``stderr`` to ``/tmp/unicorn.log`` we can "
"create a file called ``unicorn.conf`` that contains:"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:97
msgid "and start the server and daemonize it using:"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:103
msgid ""
"You can find more information about the configuration options in the "
"`unicorn documentation "
"<http://unicorn.bogomips.org/Unicorn/Configurator.html>`__."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:106
msgid "Running Sunstone with Passenger in Apache"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:108
msgid ""
"`Phusion Passenger <https://www.phusionpassenger.com/>`__ is a module for "
"`Apache <http://httpd.apache.org/>`__ and `Nginx <http://nginx.org/en/>`__ "
"web servers that runs ruby rack applications. This can be used to run "
"Sunstone server and will manage all its life cycle. If you are already using"
" one of these servers or just feel comfortable with one of them we encourage"
" you to use this method. This kind of deployment adds better concurrency and"
" lets us add an https endpoint."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:110
msgid ""
"We will provide the instructions for Apache web server but the steps will be"
" similar for nginx following `Passenger documentation "
"<https://www.phusionpassenger.com/support#documentation>`__."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:112
msgid ""
"First thing you have to do is install Phusion Passenger. For this you can "
"use pre-made packages for your distribution or follow the `installation "
"instructions <https://www.phusionpassenger.com/download/#open_source>`__ "
"from their web page. The installation is self explanatory and will guide you"
" in all the process, follow them an you will be ready to run Sunstone."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:114
msgid ""
"Next thing we have to do is configure the virtual host that will run our "
"Sunstone server. We have to point to the ``public`` directory from the "
"Sunstone installation, here is an example:"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:131
msgid ""
"Now the configuration should be ready, restart -or reload apache "
"configuration- to start the application and point to the virtual host to "
"check if everything is running."
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:134
msgid "Running Sunstone with Passenger using FreeIPA/Kerberos auth in Apache"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:136
msgid ""
"It is also possible to use Sunstone ``remote`` authentication with Apache "
"and Passenger. The configuration in this case is quite similar to Passenger "
"configuration but we must include the Apache auth module line. How to "
"configure freeIPA server and Kerberos is outside of the scope of this "
"document, you can get more info in `FreeIPA Apache setup example "
"<http://www.freeipa.org/page/Web_App_Authentication/Example_setup>`__"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:142
msgid ""
"As example to include Kerberos authentication we can use two different "
"modules: ``mod_auth_gssapi`` or ``mod_authnz_pam``."
"And generate the keytab for http service, here is an example with Passenger:"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:166
msgid ""
"Now our configuration is ready to use Passenger and Kerberos, restart -or "
"reload apache configuration- and point to the virtual host using a valid "
"ticket to check if everything is running."
msgstr ""



#: ../../source/advanced_administration/scalability/suns_advance.rst:169
msgid "Running Sunstone in Multiple Servers"
msgstr ""

#: ../../source/advanced_administration/scalability/suns_advance.rst:171
msgid ""
"You can run Sunstone in several servers and use a load balancer that "
"connects to them. Make sure you are using ``memcache`` for sessions and both"
" Sunstone servers connect to the same ``memcached`` server. To do this "
"change the parameter ``:memcache_host`` in the configuration file. Also make"
" sure that both Sunstone instances connect to the same OpenNebula server."
msgstr ""
