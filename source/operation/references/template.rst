.. _template:

================================================================================
Virtual Machine Definition Template
================================================================================

A template file consists of a set of attributes that defines a Virtual Machine. Using the command ``onetemplate create``, a template can be registered in OpenNebula to be later instantiated. For compatibility with previous versions, you can also create a new Virtual Machine directly from a template file, using the ``onevm create`` command.

.. warning:: There are some template attributes that can compromise the security of the system or the security of other VMs, and can be used **only** by users in the oneadmin group. These attributes can be configured in :ref:`oned.conf <oned_conf>`, the default ones are labeled with ``*`` in the following tables. See the complete list in the :ref:`Restricted Attributes <template_restricted_attributes>` section.

.. note:: If not explicitly stated, the described attributes are valid for all supported hypervisors.

Syntax
================================================================================

The syntax of the template file is as follows:

-  Anything behind the pound or hash sign ``#`` is a **comment**.
-  **Strings** are delimited with double quotes ``"``, if a double quote is part of the string it needs to be escaped ``\\"``.
-  **Single Attributes** are in the form:

.. code::

    NAME=VALUE

-  **Vector Attributes** that contain several values can be defined as follows:

.. code::

    NAME=[NAME1=VALUE1,NAME2=VALUE2]

-  **Vector Attributes** must contain at least one value.
-  Attribute names are case insensitive, in fact the names are converted to uppercase internally.

XML Syntax
================================================================================

Template files can be expressed in XML, with the following syntax:

-  The root element must be ``TEMPLATE``
-  **Single Attributes** are in the form:

.. code::

    <NAME>VALUE</NAME>

-  **Vector Attributes** that contain several values can be defined as follows:

.. code::

    <NAME>
      <NAME1>VALUE1</NAME1>
      <NAME2>VALUE2</NAME2>
    </NAME>

A simple example:

.. code::

    <TEMPLATE>
      <NAME>test_vm</NAME>
      <CPU>2</CPU>
      <MEMORY>1024</MEMORY>
      <DISK>
        <IMAGE_ID>2</IMAGE_ID>
      </DISK>
      <DISK>
        <IMAGE>Data</IMAGE>
        <IMAGE_UNAME>oneadmin</IMAGE_UNAME>
      </DISK>
    </TEMPLATE>

Capacity Section
================================================================================

The following attributes can be defined to specify the capacity of a VM.

+------------+----------------------------------------------------------------------------------+-------------------------+
| Attribute  | Description                                                                      | Mandatory               |
+============+==================================================================================+=========================+
| **NAME**   | Name that the VM will get for description purposes. If **NAME** is not supplied  | YES For Templates NO    |
|            | a name generated by one will be in the form of ``one-<VID>``. **NOTE**: When     | For VMs - will be set   |
|            | defining a Template it is the name of the VM Template. The actual name of the VM | to one-<vmid> if        |
|            | will be set when the VM Template is instantiated.                                | omitted                 |
+------------+----------------------------------------------------------------------------------+-------------------------+
| **MEMORY** | Amount of RAM required for the VM, in Megabytes.                                 | YES                     |
+------------+----------------------------------------------------------------------------------+-------------------------+
| **CPU**    | Percentage of CPU divided by 100 required for the Virtual Machine, half a        | YES                     |
|            | processor is written 0.5. This value is used by OpenNebula and the scheduler to  |                         |
|            | guide the host overcommitment.                                                   |                         |
+------------+----------------------------------------------------------------------------------+-------------------------+
| **VCPU**   | Number of virtual cpus. This value is **optional**, the default hypervisor       | YES - will be set to 1  |
|            | behavior is used, usually one virtual CPU.                                       | if omitted, this can be |
|            |                                                                                  | changed in the driver   |
|            |                                                                                  | configuration           |
+------------+----------------------------------------------------------------------------------+-------------------------+

Example:

.. code::

      NAME   = test-vm
      MEMORY = 128
      CPU    = 1

.. _template_showback_section:

Showback Section
================================================================================

The following attributes can be defined to set the cost of a VM. Read the :ref:`showback documentation <showback>` for more information.

+-----------------+----------------------------------+-----------+
|    Attribute    |           Description            | Mandatory |
+=================+==================================+===========+
| **MEMORY_COST** | Cost of each memory MB per hour. | NO        |
+-----------------+----------------------------------+-----------+
| **CPU_COST**    | Cost of each CPU per hour.       | NO        |
+-----------------+----------------------------------+-----------+
| **DISK_COST**   | Cost of each disk MB per hour.   | NO        |
+-----------------+----------------------------------+-----------+

.. _template_os_and_boot_options_section:

OS and Boot Options Section
================================================================================

The OS system is defined with the ``OS`` vector attribute. The following sub-attributes are supported:

**Note** the hypervisor column states that the attribute is **O**\ ptional, **M**\ andatory, or ``-`` not supported for that hypervisor

+------------------+--------------------------------------------------------------------+------------------+---------+
| OS Sub-Attribute |                            Description                             |       KVM        | vCenter |
+==================+====================================================================+==================+=========+
| **ARCH**         | CPU architecture to virtualize                                     | M (default i686) | \-      |
+------------------+--------------------------------------------------------------------+------------------+---------+
| **MACHINE**      | libvirt machine type. Check libvirt capabilities for the list of   | O                | \-      |
|                  | available machine types.                                           |                  |         |
+------------------+--------------------------------------------------------------------+------------------+---------+
| **KERNEL**       | path to the OS kernel to boot the image in the host                | O                | \-      |
+------------------+--------------------------------------------------------------------+------------------+---------+
| **KERNEL\_DS**   | image to be used as kernel (see !!)                                | O                | \-      |
+------------------+--------------------------------------------------------------------+------------------+---------+
| **INITRD**       | path to the initrd image in the host                               | O (for kernel)   | \-      |
+------------------+--------------------------------------------------------------------+------------------+---------+
| **INITRD\_DS**   | image to be used as ramdisk (see !!)                               | O (for kernel)   | \-      |
+------------------+--------------------------------------------------------------------+------------------+---------+
| **ROOT**         | device to be mounted as root                                       | O (for kernel)   | \-      |
+------------------+--------------------------------------------------------------------+------------------+---------+
| **KERNEL\_CMD**  | arguments for the booting kernel                                   | O (for kernel)   | \-      |
+------------------+--------------------------------------------------------------------+------------------+---------+
| **BOOTLOADER**   | path to the bootloader executable                                  | O                | \-      |
+------------------+--------------------------------------------------------------------+------------------+---------+
| **BOOT**         | comma separated list of boot devices types, by order of preference | M                | \-      |
|                  | (first device in the list is the first device used for boot).      |                  |         |
|                  | Possible values: ``disk#``,\ ``nic#``                              |                  |         |
+------------------+--------------------------------------------------------------------+------------------+---------+

(!!) Use one of KERNEL\_DS or KERNEL (and INITRD or INITRD\_DS).

KERNEL\_DS and INITRD\_DS refer to and image registered in a File Datastore and must be of type KERNEL and RAMDISK, respectively. The image should be refer using one of the following:

-  ``$FILE[IMAGE=<image name>]``, to select own files
-  ``$FILE[IMAGE=<image name>, <IMAGE_UNAME|IMAGE_UID>=<owner name|owner id>]``, to select images owned by other users, by user name or uid.
-  ``$FILE[IMAGE_ID=<image id>]``, global file selection

Example, a VM booting from ``sda1`` with kernel ``/vmlinuz`` :

.. code::

    OS = [ KERNEL     = /vmlinuz,
           INITRD     = /initrd.img,
           ROOT       = sda1,
           KERNEL_CMD = "ro console=tty1"]

.. code::

    OS = [ KERNEL_DS  = "$FILE[IMAGE=\"kernel 3.6\"]",
           INITRD_DS  = "$FILE[IMAGE=\"initrd 3.6\"]",
           ROOT       = sda1,
           KERNEL_CMD = "ro console=tty1"]

CPU_MODEL Options Section
================================================================================

This section (``CPU_MODEL``) configures the hardware configuration of the CPU exposed to the guest.

**Note** the hypervisor column states that the attribute is **O**\ ptional or ``-`` not supported for that hypervisor


+-------------------------+----------------------------------------------------------+-----+---------+
| Sub-Attribute           | Description                                              | KVM | vCenter |
+=========================+==========================================================+=====+=========+
| **MODEL**               | The CPU model exposed to the guest. host-passthrough is  | O   | \-      |
|                         | the same model as the host. Available modes are stored   |     |         |
|                         | in the host information and obtained through monitor.    |     |         |
+-------------------------+----------------------------------------------------------+-----+---------+

Features Section
================================================================================

This section configures the features enabled for the VM.

**Note** the hypervisor column states that the attribute is **O**\ ptional or ``-`` not supported for that hypervisor

+-------------------------+----------------------------------------------------------+-----+---------+
| Sub-Attribute           | Description                                              | KVM | vCenter |
+=========================+==========================================================+=====+=========+
| **PAE**                 | Physical address extension mode allows 32-bit guests to  | O   | \-      |
|                         | address more than 4 GB of memory                         |     |         |
+-------------------------+----------------------------------------------------------+-----+---------+
| **ACPI**                | Useful for power management, for example, with KVM       | O   | \-      |
|                         | guests it is required for graceful shutdown to work      |     |         |
+-------------------------+----------------------------------------------------------+-----+---------+
| **APIC**                | Enables the advanced programmable IRQ management. Useful | O   | \-      |
|                         | for SMP machines.                                        |     |         |
+-------------------------+----------------------------------------------------------+-----+---------+
| **LOCALTIME**           | The guest clock will be synchronized to the host's       | O   | \-      |
|                         | configured timezone when booted. Useful for Windows VMs  |     |         |
+-------------------------+----------------------------------------------------------+-----+---------+
| **HYPERV**              | Add hyperv extensions to the VM. The options can be      | O   | \-      |
|                         | configured in the driver configuration, HYPERV_OPTIONS   |     |         |
+-------------------------+----------------------------------------------------------+-----+---------+
| **GUEST_AGENT**         | Enables the QEMU Guest Agent communication. This only    | O   | \-      |
|                         | creates the socket inside the VM, the Guest Agent itself |     |         |
|                         | must be installed and started in the VM.                 |     |         |
+-------------------------+----------------------------------------------------------+-----+---------+
| **VIRTIO_SCSI_QUEUES**  | Numer of vCPU queues for the virtio-scsi controller.     | O   | \-      |
+-------------------------+----------------------------------------------------------+-----+---------+

.. code::

    FEATURES = [
        PAE = "yes",
        ACPI = "yes",
        APIC = "no",
        GUEST_AGENT = "yes",
        VIRTIO_SCSI_QUEUES = "4"
    ]

.. _reference_vm_template_disk_section:

Disks Section
================================================================================

The disks of a VM are defined with the ``DISK`` vector attribute. You can define as many ``DISK`` attributes as you need. There are three types of disks:

-  Persistent disks, uses an Image registered in a Datastore mark as persistent.
-  Clone disks, uses an Image registered in a Datastore. Changes to the images will be discarded. A clone disk can be saved as other image.
-  Volatile disks, created on-the-fly on the target hosts. Disks are disposed when the VM is shutdown and cannot be saved\_as

Persistent and Clone Disks
--------------------------------------------------------------------------------

**Note** the hypervisor column states that the attribute is **O**\ ptional, **M**\ andatory, or ``-`` not supported for that hypervisor

+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| DISK Sub-Attribute       | Description                                                                  | KVM                                | vCenter                             |
+==========================+==============================================================================+====================================+=====================================+
| **IMAGE\_ID**            | ID of the Image to use                                                       | M (no IMAGE)                       | M (no IMAGE)                        |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| **IMAGE**                | Name of the Image to use                                                     | M(no IMAGE\_ID)                    | M (no IMAGE\_ID)                    |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| **IMAGE\_UID**           | To select the IMAGE of a given user by her ID                                | O                                  | O                                   |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| **IMAGE\_UNAME**         | To select the IMAGE of a given user by her NAME                              | O                                  | O                                   |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| **DEV\_PREFIX**          | Prefix for the emulated device this image will be mounted at. For instance,  | O                                  | O                                   |
|                          | ``hd``, ``sd``, or ``vd`` for KVM virtio. If omitted, the dev\_prefix        |                                    |                                     |
|                          | attribute of the `Image <img_template>`__ will be used                       |                                    |                                     |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| **TARGET**               | Device to map image disk. If set, it will overwrite the default device       | O                                  | \-                                  |
|                          | mapping.                                                                     |                                    |                                     |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| **DRIVER**               | Specific image mapping driver                                                | O e.g.: ``raw``, ``qcow2``         | \-                                  |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| **CACHE**                | Selects the cache mechanism for the disk. Values are ``default``, ``none``,  | O                                  | \-                                  |
|                          | ``writethrough``, ``writeback``, ``directsync`` and ``unsafe``. More info in |                                    |                                     |
|                          | the `libvirt documentation                                                   |                                    |                                     |
|                          | <http://libvirt.org/formatdomain.html#elementsDevices>`__                    |                                    |                                     |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| **READONLY**             | Set how the image is exposed by the hypervisor                               | O e.g.: ``yes``, ``no``. This      | \-                                  |
|                          |                                                                              | attribute should only be used for  |                                     |
|                          |                                                                              | special storage configurations     |                                     |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| **IO**                   | Set IO policy. Values are ``threads``, ``native``                            | O (Needs qemu 1.1)                 | \-                                  |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| **TOTAL_BYTES_SEC**,     | IO throttling attributes for the disk. They are specified in bytes or IOPS   | O (Needs qemu 1.1)                 | \-                                  |
| **READ_BYTES_SEC**,      | (IO Operations) and can be specified for the total (read+write) or specific  |                                    |                                     |
| **WRITE_BYTES_SEC**      | for read or write. Total and read or write can not be used at the same time. |                                    |                                     |
| **TOTAL_IOPS_SEC**,      | By default these parameters are only allowed to be used by oneadmin.         |                                    |                                     |
| **READ_IOPS_SEC**,       |                                                                              |                                    |                                     |
| **WRITE_IOPS_SEC**       |                                                                              |                                    |                                     |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| **VCENTER_ADAPTER_TYPE** | Possible values (careful with the case): lsiLogic, ide, busLogic. More       | \-                                 | O (can be inherited from Datastore) |
|                          | information `in the VMware documentation <http://pubs.vmware.com/vsphere-60/ |                                    |                                     |
|                          | index.jsp#com.vmware.wssdk.apiref.doc/vim.VirtualDiskManager.VirtualDiskAdap |                                    |                                     |
|                          | terType.html>`__                                                             |                                    |                                     |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| **DISK_TYPE**            | This is the type of the supporting media for the image. Values:              | O                                  | M (can be inherited from Datastore) |
|                          | a block device (``BLOCK``) an ISO-9660 file or readonly block device         |                                    | FILE is the only accepted value     |
|                          | (``CDROM``)  or a plain file (``FILE``)                                      |                                    |                                     |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| **VCENTER_DISK_TYPE**    | Possible values (careful with the case): lsiLogic, ide, busLogic. More       | \-                                 | O (can be inherited from Datastore) |
|                          | information `in the VMware documentation <http://pubs.vmware.com/vsphere-60/ |                                    |                                     |
|                          | index.jsp#com.vmware.wssdk.apiref.doc/vim.VirtualDiskManager.VirtualDiskAdap |                                    |                                     |
|                          | terType.html>`__                                                             |                                    |                                     |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| **DISCARD**              | Controls what's done with with trim commands to the disk, the values can be  | O (only with virtio-scsi)          | \-                                  |
|                          | ``ignore`` or ``discard``.                                                   |                                    |                                     |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| **VCENTER_DS_REF**       | vCenter datastore's managed object reference                                 | \-                                 | M (can be inherited from Datastore) |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| **VCENTER_INSTANCE_ID**  | vCenter intance uuid                                                         | \-                                 | M (can be inherited from Datastore) |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+
| **OPENNEBULA_MANAGED**   | If set to yes, in vCenter this DISK represents a virtual disk that was       | \-                                 | O (can be inherited from Datastore) |
|                          | imported when a template or wild VM was imported.                            |                                    |                                     |
+--------------------------+------------------------------------------------------------------------------+------------------------------------+-------------------------------------+


.. _template_volatile_disks_section:


Volatile DISKS
--------------------------------------------------------------------------------

+--------------------------+-----------------------------------------------------------------------------------+-------------------------------+-----------+
|  DISK Sub-Attribute      |                                   Description                                     |              KVM              | vCenter   |
+==========================+===================================================================================+===============================+===========+
| **TYPE**                 | Type of the disk: ``swap`` or ``fs``. Type ``swawp`` is not supported in vcenter. | O                             | O         |
+--------------------------+-----------------------------------------------------------------------------------+-------------------------------+-----------+
| **SIZE**                 | size in MB                                                                        | O                             | O         |
+--------------------------+-----------------------------------------------------------------------------------+-------------------------------+-----------+
| **FORMAT**               | Format of the Image: ``raw`` or ``qcow2``.                                        | M(for fs)                     | M(for fs) |
+--------------------------+-----------------------------------------------------------------------------------+-------------------------------+-----------+
| **DEV\_PREFIX**          | Prefix for the emulated device this image                                         | O                             | O         |
|                          | will be mounted at. For instance, ``hd``,                                         |                               |           |
|                          | ``sd``. If omitted, the default dev\_prefix                                       |                               |           |
|                          | set in `oned.conf <oned_conf>`__ will be used                                     |                               |           |
+--------------------------+-----------------------------------------------------------------------------------+-------------------------------+-----------+
| **TARGET**               | device to map disk                                                                | O                             | O         |
+--------------------------+-----------------------------------------------------------------------------------+-------------------------------+-----------+
| **DRIVER**               | special disk mapping options. KVM: ``raw``, ``qcow2``.                            | O                             | \-        |
+--------------------------+-----------------------------------------------------------------------------------+-------------------------------+-----------+
| **CACHE**                | Selects the cache mechanism for the disk.                                         | O                             | \-        |
|                          | Values are ``default``, ``none``,                                                 |                               |           |
|                          | ``writethrough``, ``writeback``,                                                  |                               |           |
|                          | ``directsync`` and ``unsafe``. More info                                          |                               |           |
|                          | in the                                                                            |                               |           |
|                          | `libvirt documentation <http://libvirt.org/formatdomain.html#elementsDevices>`__  |                               |           |
+--------------------------+-----------------------------------------------------------------------------------+-------------------------------+-----------+
| **READONLY**             | Set how the image is exposed by the hypervisor                                    | O e.g.: ``yes``, ``no``.      | \-        |
|                          |                                                                                   | This attribute should only be |           |
|                          |                                                                                   | used for special storage      |           |
|                          |                                                                                   | configurations                |           |
+--------------------------+-----------------------------------------------------------------------------------+-------------------------------+-----------+
| **IO**                   | Set IO policy. Values are ``threads``, ``native``                                 | O                             | \-        |
+--------------------------+-----------------------------------------------------------------------------------+-------------------------------+-----------+
| **TOTAL_BYTES_SEC**,     | IO throttling attributes for the disk. They are specified in bytes or IOPS        | O                             | \-        |
| **READ_BYTES_SEC**,      | (IO Operations) and can be specified for the total (read+write) or specific for   |                               |           |
| **WRITE_BYTES_SEC**,     | read or write. Total and read or write can not be used at the same time.          |                               |           |
| **TOTAL_IOPS_SEC**,      | By default these parameters are only allowed to be used by oneadmin.              |                               |           |
| **READ_IOPS_SEC**,       |                                                                                   |                               |           |
| **WRITE_BYTES_SEC**      |                                                                                   |                               |           |
+--------------------------+-----------------------------------------------------------------------------------+-------------------------------+-----------+
| **VCENTER_ADAPTER_TYPE** | Controller that will handle this image in vCenter. Possible values: lsiLogic, ide,| \-                            | O         |
|                          | busLogic.                                                                         |                               |           |
+--------------------------+-----------------------------------------------------------------------------------+-------------------------------+-----------+
| **VCENTER_DISK_TYPE**    | The vCenter Disk Type of the image. Possible values: THIN, THICK, ZEROEDTHICK     | \-                            | O         |
+--------------------------+-----------------------------------------------------------------------------------+-------------------------------+-----------+


.. _template_disks_device_mapping:

Disks Device Mapping
--------------------------------------------------------------------------------

If the TARGET attribute is not set for a disk, OpenNebula will automatically assign it using the following precedence, starting with ``dev_prefix + a``:

-  First **OS** type Image.
-  Contextualization CDROM.
-  **CDROM** type Images.
-  The rest of **DATABLOCK** and **OS** Images, and **Volatile** disks.

Please visit the guide for :ref:`managing images <img_guide>` and the :ref:`image template reference <img_template>` to learn more about the different image types.

You can find a complete description of the contextualization features in the :ref:`contextualization guide <context_overview>`.

The default device prefix ``sd`` can be changed to ``hd`` or other prefix that suits your virtualization hypervisor requirements. You can find more information in the :ref:`daemon configuration guide <oned_conf>`.

An Example
--------------------------------------------------------------------------------

This a sample section for disks. There are four disks using the image repository, and two volatile ones. Note that ``fs`` and ``swap`` are generated on-the-fly:

.. code::

    # First OS image, will be mapped to sda. Use image with ID 2
    DISK = [ IMAGE_ID  = 2 ]
     
    # First DATABLOCK image, mapped to sdb.
    # Use the Image named Data, owned by the user named oneadmin.
    DISK = [ IMAGE        = "Data",
             IMAGE_UNAME  = "oneadmin" ]
     
    # Second DATABLOCK image, mapped to sdc
    # Use the Image named Results owned by user with ID 7.
    DISK = [ IMAGE        = "Results",
             IMAGE_UID    = 7 ]
     
    # Third DATABLOCK image, mapped to sdd
    # Use the Image named Experiments owned by user instantiating the VM.
    DISK = [ IMAGE        = "Experiments" ]
     
    # Volatile filesystem disk, sde
    DISK = [ TYPE   = fs,
             SIZE   = 4096,
             FORMAT = ext3 ]
     
    # swap, sdf
    DISK = [ TYPE     = swap,
             SIZE     = 1024 ]

Because this VM did not declare a CONTEXT or any disk using a CDROM Image, the first DATABLOCK found is placed right after the OS Image, in ``sdb``. For more information on image management and moving please check the :ref:`Storage guide <sm>`.

.. _template_network_section:

Network Section
================================================================================

+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| NIC Sub-Attribute    | Description                                                                                              | KVM                | vCenter            |
+======================+==========================================================================================================+====================+====================+
| **NETWORK\_ID**      | ID of the network to attach this device, as defined by ``onevnet``. Use if no NETWORK                    | M (No NETWORK)     | M (No NETWORK)     |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| **NETWORK**          | Name of the network to use (of those owned by user). Use if no NETWORK\_ID                               | M (No NETWORK\_ID) | M (No NETWORK\_ID) |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| **NETWORK\_UID**     | To select the NETWORK of a given user by her ID                                                          | O                  | O                  |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| **NETWORK\_UNAME**   | To select the NETWORK of a given user by her NAME                                                        | O                  | O                  |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| **IP**               | Request an specific IP from the ``NETWORK``                                                              | O                  | O                  |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| **MAC\***            | Request an specific HW address from the network interface                                                | O                  | O                  |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| **BRIDGE**           | Name of the bridge the network device is going to be attached to.                                        | O                  | O                  |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| **TARGET**           | name for the tun device created for the VM                                                               | O                  | O                  |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| **SCRIPT**           | name of a shell script to be executed after creating the tun device for the VM                           | O                  | O                  |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| **MODEL**            | hardware that will emulate this network interface. In KVM you can choose ``virtio`` to select its        | O                  | O                  |
|                      | specific virtualization IO framework                                                                     |                    |                    |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| **FILTER**           | to define a network filtering rule for the interface                                                     | O                  | O                  |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| **security_groups**  | command separated list of the ids of the security groups to be applied to this interface.                | o                  | \-                 |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| **INBOUND_AVG_BW**   | Average bitrate for the interface in kilobytes/second for inbound traffic.                               | O                  | O                  |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| **INBOUND_PEAK_BW**  | Maximum bitrate for the interface in kilobytes/second for inbound traffic.                               | O                  | O                  |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| **INBOUND_PEAK_KB**  | Data that can be transmitted at peak speed in kilobytes.                                                 | O                  | O                  |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| **OUTBOUND_AVG_BW**  | Average bitrate for the interface in kilobytes/second for outbound traffic.                              | O                  | O                  |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| **OUTBOUND_PEAK_BW** | Maximum bitrate for the interface in kilobytes/second for outbound traffic.                              | \-                 | O                  |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+
| **OUTBOUND_PEAK_KB** | Data that can be transmitted at peak speed in kilobytes.                                                 | \-                 | O                  |
+----------------------+----------------------------------------------------------------------------------------------------------+--------------------+--------------------+

.. warning:: The PORTS and ICMP attributes require the firewalling functionality to be configured. Please read the :ref:`firewall configuration guide <firewall>`.

Example, a VM with two NIC attached to two different networks:

.. code::

    NIC = [ NETWORK_ID = 1 ]
     
    NIC = [ NETWORK     = "Blue",
            NETWORK_UID = 0 ]

For more information on setting up virtual networks please check the :ref:`Managing Virtual Networks guide <vgg>`.

.. _nic_default_template:

Network Defaults
--------------------------------------------------------------------------------

You can define a ``NIC_DEFAULT`` attribute with values that will be copied to each new ``NIC``. This is specially useful for an administrator to define configuration parameters, such as ``MODEL``, that final users may not be aware of.

.. code::

    NIC_DEFAULT = [ MODEL = "virtio" ]

.. _io_devices_section:


I/O Devices Section
================================================================================

The following I/O interfaces can be defined for a VM:

**Note** the hypervisor column states that the attribute is **O**\ ptional, **M**\ andatory, or ``-`` not supported for that hypervisor

+--------------+--------------------------------------------------------------------------------------+-----+---------+
|  Attribute   |                                     Description                                      | KVM | vCenter |
+==============+======================================================================================+=====+=========+
| **INPUT**    | Define input devices, available sub-attributes:                                      | O   | \-      |
|              |                                                                                      |     |         |
|              | * **TYPE**: values are ``mouse`` or ``tablet``                                       |     |         |
|              | * **BUS**: values are ``usb``, ``ps2``                                               |     |         |
+--------------+--------------------------------------------------------------------------------------+-----+---------+
| **GRAPHICS** | Wether the VM should export its graphical display and how, available sub-attributes: | O   | O       |
|              |                                                                                      |     |         |
|              | * **TYPE**: values: ``vnc``, ``sdl``, ``spice``                                      |     |         |
|              | * **LISTEN**: IP to listen on.                                                       |     |         |
|              | * **PORT**: port for the VNC server                                                  |     |         |
|              | * **PASSWD**: password for the VNC server                                            |     |         |
|              | * **KEYMAP**: keyboard configuration locale to use in the VNC display                |     |         |
|              | * **RANDOM_PASSWD**: if "YES", generate a random password for each VM                |     |         |
+--------------+--------------------------------------------------------------------------------------+-----+---------+

Example:

.. code::

    GRAPHICS = [
      TYPE    = "vnc",
      LISTEN  = "0.0.0.0",
      PORT    = "5905"]

.. warning:: For KVM hypervisor the port number is a real one, not the VNC port. So for VNC port 0 you should specify 5900, for port 1 is 5901 and so on.

.. warning:: OpenNebula will prevent VNC port collision within a cluster to ensure that a VM can be deployed or migrated to any host in the selected cluster. If the selected port is in use the VM deployment will fail. If the user does not specify the port variable, OpenNebula will try to assign ``VNC_PORTS[START] + VMID``, or the first lower available port. The ``VNC_PORTS[START]`` is specified inside the ``oned.conf`` file.

.. _template_context:

Context Section
================================================================================

Context information is passed to the Virtual Machine via an ISO mounted as a partition. This information can be defined in the VM template in the optional section called Context, with the following attributes:

**Note** the hypervisor column states that the attribute is **O**\ ptional, ``-`` not supported for that hypervisor or only valid for **Linux** guests.

+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| Attribute                   | Description                                                                       | KVM   | vCenter | EC2 |
+=============================+===================================================================================+=======+=========+=====+
| **VARIABLE**                | Variables that store values related to this virtual machine or others . The name  | O     | O       | O   |
|                             | of the variable is arbitrary (in the example, we use hostname).                   |       |         |     |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **FILES \***                | space-separated list of paths to include in context device.                       | O     | \-      | \-  |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **FILES\_DS**               | space-separated list of File images to include in context device. (Not supported  | O     | \-      | \-  |
|                             | for vCenter)                                                                      |       |         |     |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **INIT\_SCRIPTS**           | If the VM uses the OpenNebula contextualization package the init.sh file is       | O     | \-      | \-  |
|                             | executed by default. When the init script added is not called init.sh or more     |       |         |     |
|                             | than one init script is added, this list contains the scripts to run and the      |       |         |     |
|                             | order. Ex. "init.sh users.sh mysql.sh"                                            |       |         |     |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **START\_SCRIPT**           | Text of the script executed when the machine starts up. It can contain shebang in | O     | O       | O   |
|                             | case it is not shell script. For example ``START_SCRIPT="yum upgrade"``           |       |         |     |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **START\_SCRIPT\_BASE64**   | The same as ``START_SCRIPT`` but encoded in Base64                                | O     | O       | O   |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **TARGET**                  | device to attach the context ISO.                                                 | O     | \-      | \-  |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **TOKEN**                   | ``YES`` to create a token.txt file for :ref:`OneGate monitorization               | O     | O       | O   |
|                             | <onegate_usage>`                                                                  |       |         |     |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **NETWORK**                 | ``YES`` to fill automatically the networking parameters for each NIC, used by the | O     | O       | \-  |
|                             | :ref:`Contextualization packages <context_overview>`                              |       |         |     |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **SET\_HOSTNAME**           | This parameter value will be the hostname of the VM.                              | O     | O       | \-  |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **DNS\_HOSTNAME**           | ``YES`` to set the VM hostname to the reverse dns name (from the first IP)        | Linux | Linux   | \-  |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **GATEWAY\_IFACE**          | This variable can be set to the interface number you want to configure the        | Linux | Linux   | \-  |
|                             | gateway. It is useful when several networks have GATEWAY parameter and you want   |       |         |     |
|                             | yo choose the one that configures it. For example to set the first interface to   |       |         |     |
|                             | configure the gateway you use ``GATEWAY_IFACE=0``                                 |       |         |     |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **DNS**                     | Specific DNS server for the Virtual Machine                                       | Linux | Linux   | \-  |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **ETHx_MAC**                | Used to find the correct interface                                                | O     | O       | \-  |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **ETHx_IP**                 | IPv4 address for the interface                                                    | O     | O       | \-  |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **ETHx_IPV6**               | IPv6 address for the interface                                                    | Linux | Linux   | \-  |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **ETHx_NETWORK**            | Network address of the interface                                                  | O     | O       | \-  |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **ETHx_MASK**               | Network mask                                                                      | O     | O       | \-  |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **ETHx_GATEWAY**            | Default IPv4 gateway for the interface                                            | O     | O       | \-  |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **ETHx_GATEWAY6**           | Default IPv6 gateway for the interface                                            | Linux | Linux   | \-  |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **ETHx_MTU**                | ``MTU`` value for the interface                                                   | Linux | Linux   | \-  |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **ETHx_DNS**                | DNS for the network                                                               | O     | O       | \-  |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **USERNAME**                | User to be created in the guest OS. If any password attribute is defined (see     | O     | O       | \-  |
|                             | below) it will change this user (defaults to ``root``).                           |       |         |     |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **CRYPTED_PASSWORD_BASE64** | Crypted password encoded in base64. To be set for the user **USERNAME**.          | Linux | Linux   | \-  |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **PASSWORD_BASE64**         | Password encoded in base64. To be set for the user **USERNAME**.                  | O     | O       | \-  |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **CRYPTED_PASSWORD**        | Crypted password. To be set for the user **USERNAME**. This parameter is not      | Linux | Linux   | \-  |
|                             | recommended, use **CRYPTED_PASSWORD_BASE64** instead.                             |       |         |     |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **PASSWORD**                | Password to be set for the user **USERNAME**. This parameter is not recommended,  | O     | O       | \-  |
|                             | use **PASSWORD_BASE64** instead.                                                  |       |         |     |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **SSH_PUBLIC_KEY**          | Key to be added to **USERNAME** ``authorized_keys`` file or ``root`` in case      | Linux | Linux   | O   |
|                             | **USERNAME** is not set.                                                          |       |         |     |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+
| **EC2_PUBLIC_KEY**          | Same as **SSH_PUBLIC_KEY**                                                        | Linux | Linux   | O   |
+-----------------------------+-----------------------------------------------------------------------------------+-------+---------+-----+

.. note::

  If more than one of the password changing attributes listed above is defined, only the one with highest priority will be applied. The priority is the same as the order of appearance in this table.

The values referred to by **VARIABLE** can be defined :

**Hardcoded values:**

.. code::

       SET_HOSTNAME   = "MAINHOST"

**Using template variables**

``$<template_variable>``: any single value variable of the VM template, like for example:

.. code::

          IP_GEN       = "10.0.0.$VMID"
          SET_HOSTNAME = "$NAME"

``$<template_variable>[<attribute>]``: Any single value contained in a multiple value variable in the VM template, like for example:

.. code::

          IP_PRIVATE = $NIC[IP]

``$<template_variable>[<attribute>, <attribute2>=<value2>]``: Any single value contained in the variable of the VM template, setting one attribute to discern between multiple variables called the same way, like for example:

.. code::

          IP_PUBLIC = "$NIC[IP, NETWORK=\"Public\"]"

**Using Virtual Network template variables**

``$NETWORK[<vnet_attribute>, <NETWORK_ID|NETWORK|NIC_ID>=<vnet_id|vnet_name|nic_id>]``: Any single value variable in the Virtual Network template, like for example:

.. code::

          dns = "$NETWORK[DNS, NETWORK_ID=3]"

.. note:: The network MUST be in used by any of the NICs defined in the template. The vnet\_attribute can be ``TEMPLATE`` to include the whole vnet template in XML (base64 encoded).

**Using Image template variables**

``$IMAGE[<image_attribute>, <IMAGE_ID|IMAGE>=<img_id|img_name>]``: Any single value variable in the Image template, like for example:

.. code::

          root = "$IMAGE[ROOT_PASS, IMAGE_ID=0]"

.. note:: The image MUST be in used by any of the DISKs defined in the template. The image\_attribute can be ``TEMPLATE`` to include the whole image template in XML (base64 encoded).

**Using User template variables**

``$USER[<user_attribute>]``: Any single value variable in the user (owner of the VM) template, like for example:

.. code::

          ssh_key = "$USER[SSH_KEY]"

.. note:: The user\_attribute can be ``TEMPLATE`` to include the whole user template in XML (base64 encoded).

**Pre-defined variables**, apart from those defined in the template you can use:

- ``$UID``, the uid of the VM owner
- ``$UNAME``, the name of the VM owner
- ``$GID``, the id of the VM owner's group
- ``$GNAME``, the name of the VM owner's group
- ``$TEMPLATE``, the whole template in XML format and encoded in base64

**FILES\_DS**, each file must be registered in a FILE\_DS datastore and has to be of type CONTEXT. Use the following to select files from Files Datastores:

- ``$FILE[IMAGE=<image name>]``, to select own files
- ``$FILE[IMAGE=<image name>, <IMAGE_UNAME|IMAGE_UID>=<owner name|owner id>]``, to select images owned by other users, by user name or uid.
- ``$FILE[IMAGE_ID=<image id>]``, global file selection

Example:

.. code::

    CONTEXT = [
      HOSTNAME   = "MAINHOST",
      IP_PRIVATE = "$NIC[IP]",
      DNS        = "$NETWORK[DNS, NAME=\"Public\"]",
      IP_GEN     = "10.0.0.$VMID",
      FILES      = "/service/init.sh /service/certificates /service/service.conf",
      FILES_DS   = "$FILE[IMAGE_ID=34] $FILE[IMAGE=\"kernel\"]",
      TARGET     = "sdc"
    ]

.. _template_placement_section:

Placement Section
================================================================================

The following attributes sets placement constraints and preferences for the VM, valid for all hypervisors:

+-------------------------------+---------------------------------------------------------------------------------------------------+
| Attribute                     | Description                                                                                       |
+===============================+===================================================================================================+
| **SCHED\_REQUIREMENTS**       | Boolean expression that rules out provisioning hosts from list of machines suitable to run this   |
|                               | VM.                                                                                               |
+-------------------------------+---------------------------------------------------------------------------------------------------+
| **SCHED\_RANK**               | This field sets which attribute will be used to sort the suitable hosts for this VM. Basically,   |
|                               | it defines which hosts are *more suitable* than others.                                           |
+-------------------------------+---------------------------------------------------------------------------------------------------+
| **SCHED\_DS\_REQUIREMENTS**   | Boolean expression that rules out entries from the pool of datastores suitable to run this VM.    |
+-------------------------------+---------------------------------------------------------------------------------------------------+
| **SCHED\_DS\_RANK**           | States which attribute will be used to sort the suitable datastores for this VM. Basically, it    |
|                               | defines which datastores are more suitable than others.                                           |
+-------------------------------+---------------------------------------------------------------------------------------------------+
| **USER_PRIORITY**             | Alter the standard FIFO ordering to dispatch VMs. VMs with a higher USER_PRIORITY will be         |
|                               | dispatched first.                                                                                 |
+-------------------------------+---------------------------------------------------------------------------------------------------+

Example:

.. code::

    SCHED_REQUIREMENTS    = "CPUSPEED > 1000"
    SCHED_RANK            = "FREE_CPU"
    SCHED_DS_REQUIREMENTS = "NAME=GoldenCephDS"
    SCHED_DS_RANK         = FREE_MB

Requirement Expression Syntax
--------------------------------------------------------------------------------

The syntax of the requirement expressions is defined as:

.. code::

      stmt::= expr';'
      expr::= VARIABLE '=' NUMBER
            | VARIABLE '!=' NUMBER
            | VARIABLE '>' NUMBER
            | VARIABLE '<' NUMBER
            | VARIABLE '@>' NUMBER
            | VARIABLE '=' STRING
            | VARIABLE '!=' STRING
            | VARIABLE '@>' STRING
            | expr '&' expr
            | expr '|' expr
            | '!' expr
            | '(' expr ')'

Each expression is evaluated to 1 (TRUE) or 0 (FALSE). Only those hosts for which the requirement expression is evaluated to TRUE will be considered to run the VM.

Logical operators work as expected ( less '<', greater '>', '&' AND, '\|' OR, '!' NOT), '=' means equals with numbers (floats and integers). When you use '=' operator with strings, it performs a shell wildcard pattern matching. Additionally the '@>' operator means *contains*, if the variable evaluates to an array the expression will be true if that array contains the given number or string (or any string that matches the provided pattern).

Any variable included in the Host template or its Cluster template can be used in the requirements. You may also use an XPath expression to refer to the attribute.

There is a special variable, ``CURRENT_VMS``, that can be used to deploy VMs in a Host where other VMs are (not) running. It can be used only with the operators '=' and '!='

Examples:

.. code::

    # Only aquila hosts (aquila0, aquila1...), note the quotes
    SCHED_REQUIREMENTS = "NAME = \"aquila*\""
     
    # Only those resources with more than 60% of free CPU
    SCHED_REQUIREMENTS = "FREE_CPU > 60"
     
    # Deploy only in the Host where VM 5 is running. Two different forms:
    SCHED_REQUIREMENTS = "CURRENT_VMS = 5"
    SCHED_REQUIREMENTS = "\"HOST/VMS/ID\" @> 5"
     
    # Deploy in any Host, except the ones where VM 5 or VM 7 are running
    SCHED_REQUIREMENTS = "(CURRENT_VMS != 5) & (CURRENT_VMS != 7)"

    # Use any datastore that is in cluster 101 (it list of cluster IDs contains 101)
    SCHED_DS_REQUIREMENTS = "\"CLUSTERS/ID\" @> 101"

.. warning:: If using OpenNebula's default match-making scheduler in a hypervisor heterogeneous environment, it is a good idea to add an extra line like the following to the VM template to ensure its placement in a specific hypervisor.

.. code::

    SCHED_REQUIREMENTS = "HYPERVISOR=\"vcenter\""

.. warning:: Template variables can be used in the SCHED\_REQUIREMENTS section.

-  ``$<template_variable>``: any single value variable of the VM template.
-  ``$<template_variable>[<attribute>]``: Any single value contained in a multiple value variable in the VM template.
-  ``$<template_variable>[<attribute>, <attribute2>=<value2>]``: Any single value contained in a multiple value variable in the VM template, setting one atribute to discern between multiple variables called the same way.

For example, if you have a custom probe that generates a MACS attribute for the hosts, you can do short of a MAC pinning, so only VMs with a given MAC runs in a given host.

.. code::

    SCHED_REQUIREMENTS = "MAC=\"$NIC[MAC]\""

Rank Expression Syntax
--------------------------------------------------------------------------------

The syntax of the rank expressions is defined as:

.. code::

      stmt::= expr';'
      expr::= VARIABLE
            | NUMBER
            | expr '+' expr
            | expr '-' expr
            | expr '*' expr
            | expr '/' expr
            | '-' expr
            | '(' expr ')'

Rank expressions are evaluated using each host information. '+', '-', '\*', '/' and '-' are arithmetic operators. The rank expression is calculated using floating point arithmetics, and then round to an integer value.

.. warning:: The rank expression is evaluated for each host, those hosts with a higher rank are used first to start the VM. The rank policy must be implemented by the scheduler. Check the configuration guide to configure the scheduler.

.. warning:: Similar to the requirements attribute, any number (integer or float) attribute defined for the host can be used in the rank attribute

Examples:

.. code::

    # First those resources with a higher Free CPU
      SCHED_RANK = "FREE_CPU"
     
    # Consider also the CPU temperature
      SCHED_RANK = "FREE_CPU * 100 - TEMPERATURE"

vCenter Section
================================================================================

You have more information about vCenter attributes in the :ref:`vCenter Specifics Section <vm_template_definition_vcenter>`:

Public Cloud Section
================================================================================

To define a Virtual Machine in the supported cloud providers, the following attributes can be used in the PUBLIC_CLOUD section:

.. _public_cloud_amazon_ec2_atts:

Amazon EC2 Attributes
--------------------------------------------------------------------------------

More information in the :ref:`Amazon EC2 Driver Section <ec2g>`:

+------------------------+-------------------------------------------------------------------------------------+-----------+
| Attribute              | Description                                                                         | Mandatory |
+========================+=====================================================================================+===========+
| **TYPE**               | Needs to be set to "EC2"                                                            | YES       |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **AMI**                | Unique ID of a machine image, returned by a call to ec2-describe-images.            | YES       |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **AKI**                | The ID of the kernel with which to launch the instance.                             | NO        |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **CLIENTTOKEN**        | Unique, case-sensitive identifier you provide to ensure idem-potency of the         | NO        |
|                        | request.                                                                            |           |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **INSTANCETYPE**       | Specifies the instance type.                                                        | YES       |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **KEYPAIR**            | The name of the key pair, later will be used to execute commands like *ssh -i       | NO        |
|                        | id\_keypair* or *scp -i id\_keypair*                                                |           |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **LICENSEPOOL**        | ``--license-pool``                                                                  | NO        |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **BLOCKDEVICEMAPPING** | The block device mapping for the instance. More than one can be specified in a      | NO        |
|                        | space-separated list. Check the --block-device-mapping option of the `EC2 CLI       |           |
|                        | Reference <http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference            |           |
|                        | /ApiReference-cmd- RunInstances.html>`__ for the syntax                             |           |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **PLACEMENTGROUP**     | Name of the placement group.                                                        | NO        |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **PRIVATEIP**          | If you're using Amazon Virtual Private Cloud, you can optionally use this parameter | NO        |
|                        | to assign the instance a specific available IP address from the subnet.             |           |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **RAMDISK**            | The ID of the RAM disk to select.                                                   | NO        |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **SUBNETID**           | If you're using Amazon Virtual Private Cloud, this specifies the ID of the subnet   | NO        |
|                        | you want to launch the instance into. This parameter is also passed to the command  |           |
|                        | *ec2-associate-address -i i-0041230 -a elasticip*.                                  |           |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **TENANCY**            | The tenancy of the instance you want to launch.                                     | NO        |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **USERDATA**           | Specifies Base64-encoded MIME user data to be made available to the instance(s) in  | NO        |
|                        | this reservation.                                                                   |           |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **SECURITYGROUPS**     | Name of the security group. You can specify more than one security group (comma     | NO        |
|                        | separated).                                                                         |           |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **SECURITYGROUPIDS**   | Ids of the security group. You can specify more than one security group (comma      | NO        |
|                        | separated).                                                                         |           |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **ELASTICIP**          | EC2 Elastic IP address to assign to the instance. This parameter is passed to the   | NO        |
|                        | command *ec2-associate-address -i i-0041230 elasticip*.                             |           |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **TAGS**               | Key and optional value of the tag, separated by an equals sign ( = ).You can        | NO        |
|                        | specify more than one tag (comma separated).                                        |           |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **AVAILABILITYZONE**   | The Availability Zone in which to run the instance.                                 | NO        |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **HOST**               | Defines which OpenNebula host will use this template                                | NO        |
+------------------------+-------------------------------------------------------------------------------------+-----------+
| **EBS_OPTIMIZED**      | Obtain a better I/O throughput for VMs with EBS provisioned volumes                 | NO        |
+------------------------+-------------------------------------------------------------------------------------+-----------+

.. _public_cloud_azure_atts:

Azure Attributes
--------------------------------------------------------------------------------

More information in the :ref:`Azure Driver Section <azg>`:

+--------------------------+-------------------------------------------------------------------------------------------------+-----------+
| Attribute                | Description                                                                                     | Mandatory |
+==========================+=================================================================================================+===========+
| **TYPE**                 | Needs to be set to "AZURE"                                                                      | YES       |
+--------------------------+-------------------------------------------------------------------------------------------------+-----------+
| **INSTANCE_TYPE**        | Specifies the capacity of the VM in terms of CPU and memory                                     | YES       |
+--------------------------+-------------------------------------------------------------------------------------------------+-----------+
| **IMAGE**                | Specifies the base OS of the VM. There are various ways to obtain the list of valid images for  | YES       |
|                          | Azure, the simplest one is detailed `here                                                       |           |
|                          | <http://msdn.microsoft.com/library/azure/jj157191.aspx>`__                                      |           |
+--------------------------+-------------------------------------------------------------------------------------------------+-----------+
| **VM_USER**              | If the selected IMAGE is prepared for Azure provisioning, a username can be specified here to   | NO        |
|                          | access the VM once booted                                                                       |           |
+--------------------------+-------------------------------------------------------------------------------------------------+-----------+
| **VM_PASSWORD**          | Password for VM_USER                                                                            | NO        |
+--------------------------+-------------------------------------------------------------------------------------------------+-----------+
| **LOCATION**             | Azure datacenter where the VM will be sent. See /etc/one/az_driver.conf for possible values     | NO        |
|                          | (use the name of the section, not the region names). Spaces are not supported in this value.    |           |
+--------------------------+-------------------------------------------------------------------------------------------------+-----------+
| **STORAGE_ACCOUNT**      | Specify the storage account where this VM will belong                                           | NO        |
+--------------------------+-------------------------------------------------------------------------------------------------+-----------+
| **WIN_RM**               | Comma-separated list of possible protocols to access this Windows VM                            | NO        |
+--------------------------+-------------------------------------------------------------------------------------------------+-----------+
| **CLOUD_SERVICE**        | Specifies the name of the cloud service where this VM will be linked. Defaults to "csn<vid>,    | NO        |
|                          | where vid is the id of the VM".                                                                 |           |
+--------------------------+-------------------------------------------------------------------------------------------------+-----------+
| **TCP_ENDPOINTS**        | Comma-separated list of TCP ports to be accesible from the public internet to this VM           | NO        |
+--------------------------+-------------------------------------------------------------------------------------------------+-----------+
| **SSHPORT**              | Port where the VMs ssh server will listen on                                                    | NO        |
+--------------------------+-------------------------------------------------------------------------------------------------+-----------+
| **VIRTUAL_NETWORK_NAME** | Name of the virtual network to which this VM will be connected                                  | NO        |
+--------------------------+-------------------------------------------------------------------------------------------------+-----------+
| **SUBNET**               | NAme of the particular Subnet where this VM will be connected to                                | NO        |
+--------------------------+-------------------------------------------------------------------------------------------------+-----------+
| **AVAILABILITY_SET**     | Name of the availability set to which this VM will belong                                       | NO        |
+--------------------------+-------------------------------------------------------------------------------------------------+-----------+
| **AFFINITY_GROUP**       | Affinity groups allow you to group your Azure services to optimize performance. All services    | NO        |
|                          | and VMs within an affinity group will be located in the same region belong                      |           |
+--------------------------+-------------------------------------------------------------------------------------------------+-----------+

.. _template_requirement_expression_syntax:

Predefined Host Attributes
--------------------------------------------------------------------------------

There are some predefined Host attributes that can be used in the requirements and rank expressions, valid for all hypervisors:

+-----------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|    Attribute    |                                                                                       Meaning                                                                                        |
+=================+======================================================================================================================================================================================+
| **NAME**        | Hostname.                                                                                                                                                                            |
+-----------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **MAX_CPU**     | Total CPU in the host, in (# cores * 100).                                                                                                                                           |
+-----------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **CPU_USAGE**   | Allocated used CPU in (# cores * 100). This value is the sum of all the CPU requested by VMs running on the host, and is updated instantly each time a VM is deployed or undeployed. |
+-----------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **FREE_CPU**    | Real free CPU in (# cores * 100), as returned by the probes. This value is updated each monitorization cycle.                                                                        |
+-----------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **USED_CPU**    | Real used CPU in (# cores * 100), as returned by the probes. USED_CPU = MAX_CPU - FREE_CPU. This value is updated each monitorization cycle.                                         |
+-----------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **MAX_MEM**     | Total memory in the host, in KB.                                                                                                                                                     |
+-----------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **MEM_USAGE**   | Allocated used memory in KB. This value is the sum of all the memory requested by VMs running on the host, and is updated instantly each time a VM is deployed or undeployed.        |
+-----------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **FREE_MEM**    | Real free memory in KB, as returned by the probes. This value is updated each monitorization cycle.                                                                                  |
+-----------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **USED_MEM**    | Real used memory in KB, as returned by the probes. USED_MEM = MAX_MEM - FREE_MEM. This value is updated each monitorization cycle.                                                   |
+-----------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **RUNNING_VMS** | Number of VMs deployed on this host.                                                                                                                                                 |
+-----------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **HYPERVISOR**  | Hypervisor name.                                                                                                                                                                     |
+-----------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

You can execute ``onehost show <id> -x`` to see all the attributes and their values.

.. note:: Check the :ref:`Monitoring Subsystem <devel-im>` guide to find out how to extend the information model and add any information probe to the Hosts.

.. _template_raw_section:

Hypervisor Section
================================================================================

You can also tune several low-level hypervisor attributes.

The ``RAW`` attribute (optional) section of the VM template is used pass VM information directly to the underlying hypervisor. Anything placed in the data attribute gets passed straight to the hypervisor unmodified.

+-------------------+---------------------------------------------------+-----+---------+
| RAW     Attribute |                    Description                    | KVM | vCenter |
+===================+===================================================+=====+=========+
| **TYPE**          | Possible values are: ``kvm``, ``xen``, ``vmware`` | O   | \-      |
+-------------------+---------------------------------------------------+-----+---------+
| **DATA**          | Raw data to be passed directly to the hypervisor  | O   | \-      |
+-------------------+---------------------------------------------------+-----+---------+
| **DATA\_VMX**     | Raw data to be added directly to the .vmx file    | \-  | \-      |
+-------------------+---------------------------------------------------+-----+---------+

Example:

.. code::

       RAW = [
           type = "kvm",
           data = "<devices><serial type=\"pty\"><source path=\"/dev/pts/5\"/><target port=\"0\"/></serial><console type=\"pty\" tty=\"/dev/pts/5\"><source path=\"/dev/pts/5\"/><target port=\"0\"/></console></devices>"
       ]

.. _emulator_override:

Additionally the following can be also set for each hypervisor as specified:

+-------------------+---------------------------------------------------+-----+---------+
|         Attribute |                    Description                    | KVM | vCenter |
+===================+===================================================+=====+=========+
| **EMULATOR**      | Path to the emulator binary to use with this VM   | O   | \-      |
+-------------------+---------------------------------------------------+-----+---------+

Example:

.. code::

       EMULATOR="/usr/bin/qemu-system-aarch64"

.. _template_restricted_attributes:

Restricted Attributes
================================================================================

All the **default** restricted attributes to users in the oneadmin group are summarized in the following list:

- ``CONTEXT/FILES``
- ``NIC/MAC``
- ``NIC/VLAN_ID``
- ``NIC/BRIDGE``
- ``NIC/INBOUND_AVG_BW``
- ``NIC/INBOUND_PEAK_BW``
- ``NIC/INBOUND_PEAK_KB``
- ``NIC/OUTBOUND_AVG_BW``
- ``NIC/OUTBOUND_PEAK_BW``
- ``NIC/OUTBOUND_PEAK_KB``
- ``NIC_DEFAULT/MAC``
- ``NIC_DEFAULT/VLAN_ID``
- ``NIC_DEFAULT/BRIDGE``
- ``NIC/OPENNEBULA_MANAGED``
- ``DISK/TOTAL_BYTES_SEC``
- ``DISK/READ_BYTES_SEC``
- ``DISK/WRITE_BYTES_SEC``
- ``DISK/TOTAL_IOPS_SEC``
- ``DISK/READ_IOPS_SEC``
- ``DISK/WRITE_IOPS_SEC``
- ``DISK/OPENNEBULA_MANAGED``
- ``CPU_COST``
- ``MEMORY_COST``
- ``DISK_COST``
- ``DEPLOY_FOLDER``

These attributes can be configured in :ref:`oned.conf <oned_conf>`.

.. _template_user_inputs:

User Inputs
================================================================================

``USER_INPUTS`` provides the template creator with the possibility to dynamically ask the user instantiating the template for dynamic values that must be defined.

.. code::

    USER_INPUTS = [
      BLOG_TITLE="M|text|Blog Title",
      MYSQL_PASSWORD="M|password|MySQL Password",
      INIT_HOOK="M|text64|You can write a script that will be run on startup",
      <VAR>="M|<type>|<desc>"
    ]

    CONTEXT=[
      BLOG_TITLE="$BLOG_TITLE",
      MYSQL_PASSWORD="$MYSQL_PASSWORD" ]

Note that the CONTEXT references the variables defined in the USER_INPUTS so the value is injected into the VM.

Valid ``types``:

+-----------------+-----------------------------------------------------------------+--------------------------------------------------------+
| Types           | Value                                                           | Description                                            |
+=================+=================================================================+========================================================+
| text            | <VAR>="M|text| <desc>"                                          | A string                                               |
+-----------------+-----------------------------------------------------------------+--------------------------------------------------------+
| text64          | <VAR>="M|text64| <desc>"                                        | text64 will encode the user's response in Base64       |
+-----------------+-----------------------------------------------------------------+--------------------------------------------------------+
| password        | <VAR>="M|password| <desc>"                                      |                                                        |
+-----------------+-----------------------------------------------------------------+--------------------------------------------------------+
| number          | <VAR>="M|number| <desc>"                                        | An integer                                             |
+-----------------+-----------------------------------------------------------------+--------------------------------------------------------+
| float           | <VAR>="M|number-float| <desc>"                                  | A float                                                |
+-----------------+-----------------------------------------------------------------+--------------------------------------------------------+
| range           | <VAR>="M|range| <desc>|<min>..<max>||<default>|"                | A range of integers                                    |
+-----------------+-----------------------------------------------------------------+--------------------------------------------------------+
| range (float)   | <VAR>="M|range-float| <desc>|<min>..<max>||<default>|"          | A range of floats                                      |
+-----------------+-----------------------------------------------------------------+--------------------------------------------------------+
| list            | <VAR>="M|list| <desc>|<v1>,<v2>,<v3>||<default>|"               | A list                                                 |
+-----------------+-----------------------------------------------------------------+--------------------------------------------------------+
| boolean         | <VAR>="M|boolean| <desc>|<default>|"                            | Yes or not                                             |
+-----------------+-----------------------------------------------------------------+--------------------------------------------------------+

There is the possibility of making the USER_INPUT mandatory or not.

In Sunstone, the ``USER_INPUTS`` can be ordered with the mouse.

|user_inputs|

.. |user_inputs| image:: /images/sunstone_user_inputs.png
