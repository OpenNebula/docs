.. _support:

================================================================================
Support Utilities (EE)
================================================================================

.. important::

   This feature is available only in OpenNebula **Enterprise Edition**.

OpenNebula provides customers with means to generate diagnostic bundles with all details necessary to handle the support cases. It covers:

- Gathering the configuration state of operating system and services on the Front-end and nodes.
- Inspecting OpenNebula configuration, the state and metadata of VMs, Hosts, Virtual Networks, etc.
- Dumping OpenNebula database.
- Scanning vCenter user permissions.

There are two specialized tools contained in the OpenNebula server package:

- :ref:`generate support diagnostic bundle <support_bundle>`,
- :ref:`scan vCenter permissions <support_vcenter>`.

.. _support_bundle:

Generate Support Bundle
================================================================================

.. important:: If you have a vCenter infra, in order to gather more information about vCenter, you need to use ``sudo onesupport`` instead of ``onegather``, for more information please check ``sudo onesupport --help``.

If there are no special requirements, the support diagnostic bundle can be generated just by running ``onegather`` **on the Front-end** without any extra parameters. The command must be running under **privileged user** (directly by ``root`` or via ``sudo``). For example:

.. important:: If you are running your Front-end in a federation, OneGather will prompt you in the result section to run it on all other nodes. 

.. prompt:: bash $ auto

    $ sudo onegather --with-db

The command generates a diagnostic bundle archive and puts it into ``/tmp/``. The precise file location is shown at the end of the terminal output, e.g.:

.. prompt:: bash # auto

    Bundle TAR: /tmp/d20230224-3237009-1t5au19.tar.xz

Please **attach this file to the support ticket**.

.. important::

   For most support issues it's enough to provide just a limited support bundle with Front-end only specific information and without database dumps. The limited bundle can be generated by running:

    .. prompt:: bash $ auto

        $ sudo onegather --fe-only

The tool prints all actions, based on which you can decide if you want to provide such a bundle to the support team. Here's an example of a full output:

.. code-block:: bash

    $ sudo onegather --fe-only
    Get OS distribution
    Get kernel version
    Get installed packages
    Get security settings
    Get SELinux configuration
    Get AppArmor configuration
    Get system services
    Get CPU information
    Get memory/swap
    Get disk space for FE and nodes
    Get ENV vars
    Get list of open ports
    Get current user
    Get process list
    Get kernel runtime parameters (sysctl)
    Get list of mounts
    Get list of block devices
    Get physical volumes list
    Get volume group list
    Get logical volumes list
    Get Federation configuration
    Get OneProvision GUI Logs
    Get VM Templates
    Get user "oneadmin"
    Get Ruby version and Gems
    Detect web server
    Get OpenNebula version
    Get OpenNebula logs
    Get system logs
    Get OpenNebula configuration
    Get OpenNebula remotes
    Get OneProvision GUI Logs
    Dump OpenNebula objects

    Tar bundle

    ** Results **
    -> Bundle: /tmp/d20230224-3237009-1t5au19
    -> Bundle TAR: /tmp/d20230224-3237009-1t5au19.tar.xz
    -> Bundle size is: 0.91 MB
    -> NOTICE: Bundle can be safely uploaded to Zendesk.
    -> NOTICE: Front-end is in STANDALONE mode.


Advanced Usage
--------------------------------------------------------------------------------

The purpose of the ``onegather`` tool is to gather as much information as possible about the environment so that OpenNebula's customer care can give more accurate and faster responses. The usage is very simple and there are only a few configuration options. There are brief descriptions of all of them available via argument ``--help``.

.. prompt:: bash $ auto

    $ sudo onegather --help
    Usage: onegather [options]
        -v, --vm=VM                      Get information about specific VM
        -g, --group=GROUP                Group to process
            --no-confg                   Do not get configuration files
            --with-db                    Include database
            --no-logs                    Do not get log files
            --fe-only                    Get information from the Front-end only.

There are two types of arguments to specify:

- *host type*
- *dump type*

Host Types
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

What data is gathered depends mainly on the type of host we are running the tool on. Each *host type* gets the same common data (operating system, hardware, memory, installed software packages, system services, mounts, logs etc.) and differs only in data specific to the type.

Available options are:

+----------+--------------------------------------------------------------------------------+
| Option   | Main Subject                                                                   |
+==========+================================================================================+
| ``fe``   | OpenNebula Front-end services configuration and state, database                |
|          | dump, various entities (e.g., VMs).                                            |
+----------+--------------------------------------------------------------------------------+
| ``host`` | Hypervisor services (libvirt, KVM) and network configuration.                  |
+----------+--------------------------------------------------------------------------------+
| ``all``  | Combination of ``frontend`` mode and ``host`` mode.                            |
|          | It starts with Front-end specific data and connects to each virtualization     |
|          | host to get Host-specific data. This mode is the **default**.                  |
+----------+--------------------------------------------------------------------------------+

Examples
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Simple run gathers all information (runs are equivalent):

.. prompt:: bash $ auto

    $ sudo onegather --with-db
    $ sudo onegather -g all --with-db

Get only Front-end specific data (must run on Front-end):

.. prompt:: bash $ auto

    $ sudo onegather --fe-only --with-db

Get only host-specific data (must run on hypervisor Node):

.. prompt:: bash $ auto

    $ sudo onegather -g host --with-db

Dump Types
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The level of detail contained in the gathered data can be adjusted by *dump type* parameters. The following types are supported:

+-------------+------------------------------------------+
| Option      | Description                              |
+=============+==========================================+
| ``with-db`` | Enable database dumps.                   |
+-------------+------------------------------------------+
| ``no-conf`` | Disable bundling of configuration files. |
+-------------+------------------------------------------+
| ``no-logs`` | Disable bundling of logs.                |
+-------------+------------------------------------------+

All dump types are enabled by default (``db conf logs``), but can be selectively disabled with negative options ``no-db``, ``no-conf`` and/or ``no-logs``.

.. important::

    If negative dump types (``no-db``, ``no-conf``, ``no-logs``) are used, these types are excluded from the support bundle. All the remaining types are included.

Examples
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A simple run gathers all information (these runs are equivalent):

.. prompt:: bash $ auto

    $ sudo onegather --with-db

Get support bundle without any database dumps and logs:

.. prompt:: bash $ auto

    $ sudo onegather --no-logs

Get support bundle with database dump, but no logs and configurations:

.. prompt:: bash $ auto

    $ sudo onegather --with-db --no-conf --no-logs

Dump types and host types parameters can be combined

.. prompt:: bash $ auto

    $ sudo onegather --fe-only --with-db

.. _support_vcenter:

Scan vCenter Permissions
================================================================================

When you are using OpenNebula cloud to manage vCenter infrastructure, it might also be necessary to know details about the permissions configuration inside vCenter. This is **automatically retrieved during the support bundle preparation** but can be scanned separately at any time (e.g., in case the automatic run fails).

The dedicated tool ``onesupport_vcenter_privs`` is used to gather permissions configuration.

.. important::

    The tool connects directly to your vCenter instance and must be provided with connection parameters.

Syntax:

.. prompt:: bash $ auto

    $ onesupport_vcenter_privs
    Usage: onesupport_vcenter_privs [arguments]

    Mandatory arguments:
      --host=name       .... vCenter hostname
      --user=name       .... vCenter login user name
      --password=text   .... vCenter password
      --check-user=name .... vCenter user for OpenNebula to check

Example run:

.. prompt:: bash $ auto

    $ onesupport_vcenter_privs --host=vcenter.localdomain \
        --user=administrator@vsphere.local --password=TopSecretPassword \
        --check-user=oneadmin@vsphere.local

The result is printed on the terminal (standard output). It can be redirected to the file or just copied and pasted in the support ticket.
